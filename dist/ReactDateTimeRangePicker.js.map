{"version":3,"sources":["../src/ReactDateTimeRangePicker.tsx","../tsup.inject.js","../src/components/CalendarLayout/Index.tsx","../src/components/Calendar/Index.tsx","../src/components/Month/Index.tsx","../src/components/Week/Index.tsx","../src/components/Day/Index.tsx","../src/components/TimePicker/Index.tsx","../src/components/TimePicker/HoursPicker/Index.tsx","../src/components/TimePicker/MinutesPicker/Index.tsx","../src/components/TimePicker/SecondsPicker/Index.tsx","../src/components/CalendarControls/Left/Index.tsx","../src/components/CalendarControls/Right/Index.tsx","../src/components/SelectionPanel/Index.tsx","../src/components/DisplayPanel/Index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport \"./ReactDateTimeRangePicker.css\";\r\nimport CalendarLayout from \"./components/CalendarLayout/Index\";\r\nimport DisplayPanel from \"./components/DisplayPanel/Index\";\r\nimport { SelectedRange } from \"./types/SelectedRange\";\r\n\r\ntype ReactDateTimeRangePickerProps = {\r\n  dateFormat: string;\r\n  width: number;\r\n  dateRangePicker: boolean;\r\n  selectedDate: DateTime;\r\n};\r\n\r\nfunction ReactDateTimeRangePicker(props: ReactDateTimeRangePickerProps) {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [selectedRange, setSelectedRange] = useState<SelectedRange>();\r\n\r\n  return (\r\n    <div className=\"rdtrp-container\">\r\n      <DisplayPanel\r\n        selectedRange={selectedRange}\r\n        setShowPopup={setShowPopup}\r\n        selectedDate={props.selectedDate}\r\n        dateFormat={props.dateFormat}\r\n      />\r\n      {showPopup && (\r\n        <div className=\"calendar-popup\">\r\n          <CalendarLayout\r\n            dateFormat={props.dateFormat}\r\n            closeFn={setShowPopup}\r\n            width={props.width}\r\n            selectedDate={props.selectedDate}\r\n            setSelectedRange={setSelectedRange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReactDateTimeRangePicker;\r\n","import React from 'react';\r\nimport DateTime from 'luxon';\r\n\r\nexport { React, DateTime }","import { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport Calendar from \"../Calendar/Index\";\r\nimport TimePicker from \"../TimePicker/Index\";\r\nimport CalendarControlLeft from \"../CalendarControls/Left/Index\";\r\nimport CalendarControlRight from \"../CalendarControls/Right/Index\";\r\nimport \"./CalendarLayout.css\";\r\nimport { HoverProps } from \"../../types/HoverProps\";\r\nimport SelectionPanel from \"../SelectionPanel/Index\";\r\nimport { SelectedRange } from \"../../types/SelectedRange\";\r\n\r\ntype CalendarLayoutProps = {\r\n  width: number;\r\n  selectedDate: DateTime;\r\n  dateFormat: string;\r\n  setSelectedRange: (range: SelectedRange) => any;\r\n  closeFn: (show: boolean) => any;\r\n};\r\n\r\ntype CalendarLayoutState = {\r\n  currMonth: number;\r\n  leftMonth: number;\r\n  leftMonthName: string;\r\n  leftMonthYear: number;\r\n  rightMonth: number;\r\n  rightMonthName: string;\r\n  rightMonthYear: number;\r\n};\r\n\r\nfunction handleOutsideClick(ref: any, e: any, closeFn: (show: boolean) => any) {\r\n  if (ref.current && !ref.current.contains(e.target)) {\r\n    closeFn(false);\r\n  }\r\n}\r\n\r\nfunction CalendarLayout(props: CalendarLayoutProps) {\r\n  const appRef = useRef(null);\r\n  const [calendarInit, updateLeftCalActivity] = useState({\r\n    currMonth: props.selectedDate.month,\r\n    leftMonth: props.selectedDate.month,\r\n    leftMonthName: props.selectedDate.monthShort,\r\n    leftMonthYear: props.selectedDate.year,\r\n    rightMonth: props.selectedDate.month + 1,\r\n    rightMonthName: props.selectedDate.plus({ month: 1 }).monthShort,\r\n    rightMonthYear: props.selectedDate.plus({ month: 1 }).year,\r\n  } as CalendarLayoutState);\r\n  const [startDate, setStartDate] = useState<DateTime>(\r\n    props.selectedDate.minus({ days: 1 })\r\n  );\r\n  const [endDate, setEndDate] = useState<DateTime | undefined>(\r\n    props.selectedDate.plus({ days: 1 })\r\n  );\r\n  const [hoverProps, setHoverProps] = useState({\r\n    hovering: false,\r\n  } as HoverProps);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", (e) =>\r\n      handleOutsideClick(appRef, e, props.closeFn)\r\n    );\r\n    return () =>\r\n      document.removeEventListener(\"mousedown\", (e) =>\r\n        handleOutsideClick(appRef, e, props.closeFn)\r\n      );\r\n  });\r\n\r\n  function setDateRange(startDate: DateTime, endDate?: DateTime) {\r\n    setStartDate(startDate);\r\n    setEndDate(endDate);\r\n  }\r\n\r\n  function applySelectedDateRange(startDate: DateTime, endDate: DateTime) {\r\n    props.setSelectedRange({\r\n      startDate: startDate,\r\n      endDate: endDate\r\n    });\r\n  }\r\n\r\n  function increaseMonth() {\r\n    var date = DateTime.fromObject({\r\n      month: calendarInit.rightMonth,\r\n      year: calendarInit.rightMonthYear,\r\n    });\r\n    updateLeftCalActivity({\r\n      ...calendarInit,\r\n      leftMonth: date.month,\r\n      leftMonthName: date.monthShort,\r\n      leftMonthYear: date.year,\r\n      rightMonth: date.plus({ month: 1 }).month,\r\n      rightMonthName: date.plus({ month: 1 }).monthShort,\r\n      rightMonthYear: date.plus({ month: 1 }).year,\r\n    });\r\n  }\r\n\r\n  function decreaseMonth() {\r\n    var date = DateTime.fromObject({\r\n      month: calendarInit.leftMonth,\r\n      year: calendarInit.leftMonthYear,\r\n    });\r\n    updateLeftCalActivity({\r\n      ...calendarInit,\r\n      leftMonth: date.minus({ month: 1 }).month,\r\n      leftMonthName: date.minus({ month: 1 }).monthShort,\r\n      leftMonthYear: date.minus({ month: 1 }).year,\r\n      rightMonth: date.month,\r\n      rightMonthName: date.monthShort,\r\n      rightMonthYear: date.year,\r\n    });\r\n  }\r\n\r\n  function handleHoverOn(e: any) {\r\n    if (e.target.dataset.isfiller === \"true\") return;\r\n\r\n    setHoverProps({\r\n      hovering: true,\r\n      date: DateTime.fromISO(e.target.dataset.date),\r\n    });\r\n\r\n    e.stopPropagation();\r\n  }\r\n\r\n  function handleHoverOff(e: any) {\r\n    if (e.target.dataset.isfiller === \"true\") return;\r\n\r\n    setHoverProps({\r\n      hovering: false,\r\n    });\r\n\r\n    e.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"calendar-layout\"\r\n      ref={appRef}\r\n      onMouseOver={handleHoverOn}\r\n      onMouseOut={handleHoverOff}\r\n    >\r\n      <div className=\"calendars\">\r\n        <div\r\n          className=\"left-calendar\"\r\n          style={{\r\n            width: props.width,\r\n          }}\r\n        >\r\n          <CalendarControlLeft\r\n            decreaseMonth={decreaseMonth}\r\n            monthName={calendarInit.leftMonthName}\r\n            year={calendarInit.leftMonthYear}\r\n          />\r\n          <Calendar\r\n            month={calendarInit.leftMonth}\r\n            year={calendarInit.leftMonthYear}\r\n            selectedDate={startDate!.startOf(\"day\")}\r\n            startDate={startDate!.startOf(\"day\")}\r\n            endDate={endDate ? endDate.startOf(\"day\") : undefined}\r\n            hoverProps={hoverProps}\r\n            setHoverProps={setHoverProps}\r\n            selectDateRange={setDateRange}\r\n          />\r\n          <TimePicker\r\n            selectedDate={startDate!}\r\n            selectedHour={startDate!.hour}\r\n            selectedMinute={startDate!.minute}\r\n            selectedSecond={startDate!.second}\r\n            setDate={setStartDate}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"right-calendar\"\r\n          style={{\r\n            width: props.width,\r\n          }}\r\n        >\r\n          <CalendarControlRight\r\n            increaseMonth={increaseMonth}\r\n            monthName={calendarInit.rightMonthName}\r\n            year={calendarInit.rightMonthYear}\r\n          />\r\n          <Calendar\r\n            month={calendarInit.rightMonth}\r\n            year={calendarInit.rightMonthYear}\r\n            selectedDate={endDate ? endDate.startOf(\"day\") : undefined}\r\n            startDate={startDate!.startOf(\"day\")}\r\n            endDate={endDate ? endDate.startOf(\"day\") : undefined}\r\n            hoverProps={hoverProps}\r\n            setHoverProps={setHoverProps}\r\n            selectDateRange={setDateRange}\r\n          />\r\n          <TimePicker\r\n            selectedDate={endDate}\r\n            selectedHour={endDate ? endDate.hour : 12}\r\n            selectedMinute={endDate ? endDate.minute : 0}\r\n            selectedSecond={endDate ? endDate.second : 0}\r\n            setDate={setEndDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"selection-panel-container\">\r\n        <SelectionPanel \r\n          startDate={startDate} \r\n          endDate={endDate} \r\n          format={props.dateFormat} \r\n          applyDateRange={applySelectedDateRange}\r\n          closeFn={props.closeFn}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarLayout;\r\n","import React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport \"./Calendar.css\";\r\nimport Month from \"../Month/Index\";\r\nimport { HoverProps } from \"../../types/HoverProps\";\r\n\r\ntype CalendarProps = {\r\n  month: number;\r\n  year: number;\r\n  selectedDate?: DateTime;\r\n  startDate: DateTime;\r\n  endDate?: DateTime;\r\n  hoverProps: HoverProps;\r\n  setHoverProps: (hoverProps: HoverProps) => any;\r\n  selectDateRange: (startDate: DateTime, endDate?: DateTime) => any;\r\n};\r\n\r\nfunction Calendar(props: CalendarProps) {\r\n  return (\r\n    <Month\r\n      key={props.selectedDate?.month}\r\n      month={props.month}\r\n      year={props.year}\r\n      selectedDate={props.selectedDate}\r\n      startDate={props.startDate.startOf(\"day\")}\r\n      endDate={props.endDate ? props.endDate.startOf(\"day\") : undefined}\r\n      selectDateRange={props.selectDateRange}\r\n      hoverProps={props.hoverProps}\r\n      setHoverProps={props.setHoverProps}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport \"./Month.css\";\r\nimport Week from \"../Week/Index\";\r\nimport { HoverProps } from \"../../types/HoverProps\";\r\n\r\ntype MonthProps = {\r\n  month: number;\r\n  year: number;\r\n  selectedDate?: DateTime;\r\n  startDate: DateTime;\r\n  endDate?: DateTime;\r\n  hoverProps: HoverProps;\r\n  setHoverProps: (hoverProps: HoverProps) => any;\r\n  selectDateRange: (startDate: DateTime, endDate?: DateTime) => any;\r\n};\r\n\r\nfunction Month(props: MonthProps) {\r\n  var calenderObj = DateTime.fromObject({\r\n    year: props.year,\r\n    month: props.month,\r\n  });\r\n\r\n  let dayOfWeek = calenderObj.startOf(\"month\").weekday;\r\n\r\n  var monthTemplate = [];\r\n  for (var i = 1; i <= 6; i++) {\r\n    monthTemplate.push(\r\n      <Week\r\n        weekNumber={i}\r\n        dayOffset={dayOfWeek}\r\n        month={props.month}\r\n        year={props.year}\r\n        selectedDate={props.selectedDate}\r\n        startDate={props.startDate.startOf(\"day\")}\r\n        endDate={props.endDate ? props.endDate.startOf(\"day\") : undefined}\r\n        hoverProps={props.hoverProps}\r\n        selectDateRange={props.selectDateRange}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div className=\"month\">{monthTemplate}</div>;\r\n}\r\n\r\nexport default Month;\r\n","import React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport \"./Week.css\";\r\nimport Day from \"../Day/Index\";\r\nimport { HoverProps } from \"../../types/HoverProps\";\r\n\r\ntype WeekProps = {\r\n  dayOffset: number;\r\n  weekNumber: number;\r\n  year: number;\r\n  month: number;\r\n  selectedDate?: DateTime;\r\n  hoverProps: HoverProps;\r\n  startDate: DateTime;\r\n  endDate?: DateTime;\r\n  selectDateRange: (startDate: DateTime, endDate?: DateTime) => any;\r\n};\r\n\r\nfunction Week(props: WeekProps) {\r\n  var weekStartDate = DateTime.fromObject({\r\n    year: props.year,\r\n    month: props.month,\r\n  });\r\n\r\n  var currMonth = weekStartDate.month;\r\n\r\n  if (props.weekNumber > 1) {\r\n    weekStartDate = weekStartDate.plus({\r\n      days: (props.weekNumber - 1) * 7,\r\n    });\r\n  }\r\n\r\n  weekStartDate = weekStartDate.minus({ days: props.dayOffset });\r\n\r\n  var weekTemplate = [weekStartDate];\r\n  for (var i = 1; i < 7; i++) {\r\n    weekTemplate.push(weekTemplate[i - 1].plus({ hour: 24 }));\r\n  }\r\n\r\n  return (\r\n    <div className=\"week\">\r\n      {weekTemplate.map((el) => (\r\n        <Day\r\n          key={el.toMillis()}\r\n          date={el}\r\n          selectDateRange={props.selectDateRange}\r\n          selectedDate={props.selectedDate}\r\n          startDate={props.startDate.startOf(\"day\")}\r\n          endDate={props.endDate ? props.endDate.startOf(\"day\") : undefined}\r\n          currMonth={currMonth}\r\n          hoverProps={props.hoverProps}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Week;\r\n","import React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport \"./Day.css\";\r\nimport { HoverProps } from \"../../types/HoverProps\";\r\n\r\ntype DayProps = {\r\n  date: DateTime;\r\n  currMonth: number;\r\n  selectedDate?: DateTime;\r\n  hoverProps: HoverProps;\r\n  startDate: DateTime;\r\n  endDate?: DateTime;\r\n  selectDateRange: (startDate: DateTime, endDate?: DateTime) => any;\r\n};\r\n\r\nfunction getClassName(\r\n  currElDate: DateTime,\r\n  currMonth: number,\r\n  startDate: DateTime,\r\n  endDate?: DateTime\r\n): string {\r\n  var classNameString = \"date-cell\";\r\n\r\n  if (currElDate.month !== currMonth) {\r\n    classNameString += \" filler-date\";\r\n  }\r\n\r\n  if (\r\n    currElDate.toMillis() === startDate.toMillis() ||\r\n    (endDate && currElDate.toMillis() === endDate.toMillis())\r\n  ) {\r\n    classNameString += \" selected-date\";\r\n  } else {\r\n    classNameString += \" default-hover\";\r\n  }\r\n\r\n  return classNameString;\r\n}\r\n\r\nfunction dayContent(date: DateTime) {\r\n  return date.toFormat(\"dd\");\r\n}\r\n\r\nfunction handleClick(e: any, props: DayProps) {\r\n  if (\r\n    (props.startDate && props.endDate) ||\r\n    (!props.startDate && !props.endDate)\r\n  ) {\r\n    props.selectDateRange(props.date.startOf(\"day\"), undefined);\r\n  } else if (props.startDate && !props.endDate) {\r\n    if (\r\n      props.date.startOf(\"day\").toMillis() <\r\n      props.startDate.startOf(\"day\").toMillis()\r\n    ) {\r\n      props.selectDateRange(props.date.startOf(\"day\"), undefined);\r\n    } else {\r\n      props.selectDateRange(props.startDate, props.date.startOf(\"day\"));\r\n    }\r\n  }\r\n\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction Day(props: DayProps) {\r\n  let classes = getClassName(\r\n    props.date,\r\n    props.currMonth,\r\n    props.startDate,\r\n    props.endDate\r\n  );\r\n\r\n  /*\r\n    If endDate is selected, only highligh selected range.\r\n    Do not highlight on hover.\r\n    If endDate is not selected, show highligh on hover\r\n  */\r\n  if (\r\n    (props.endDate &&\r\n      props.date.toMillis() > props.startDate.toMillis() &&\r\n      props.date.toMillis() < props.endDate.toMillis()) ||\r\n    (!props.endDate &&\r\n      props.hoverProps.hovering &&\r\n      props.date.toMillis() > props.startDate.toMillis() &&\r\n      props.date.toMillis() < props.hoverProps.date!.toMillis())\r\n  ) {\r\n    classes += \" in-range\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classes}\r\n      data-date={props.date.toISO()}\r\n      data-isfiller={props.date.month !== props.currMonth}\r\n      onClick={(e) =>\r\n        props.date.month === props.currMonth\r\n          ? handleClick(e, props)\r\n          : e.preventDefault()\r\n      }\r\n    >\r\n      {dayContent(props.date)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Day;\r\n","import React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport HourPicker from \"./HoursPicker/Index\";\r\nimport MinutesPicker from \"./MinutesPicker/Index\";\r\nimport SecondsPicker from \"./SecondsPicker/Index\";\r\nimport \"./TimePicker.css\";\r\n\r\ntype TimePickerProps = {\r\n  selectedDate?: DateTime;\r\n  selectedHour: number;\r\n  selectedMinute: number;\r\n  selectedSecond: number;\r\n  setDate: (date: DateTime) => any;\r\n};\r\n\r\nfunction TimePicker(props: TimePickerProps) {\r\n  function setHour(hour: number) {\r\n    props.selectedDate && props.setDate(props.selectedDate.set({ hour: hour }));\r\n  }\r\n\r\n  function setMinute(min: number) {\r\n    props.selectedDate &&\r\n      props.setDate(props.selectedDate.set({ minute: min }));\r\n  }\r\n\r\n  function setSecond(sec: number) {\r\n    props.selectedDate &&\r\n      props.setDate(props.selectedDate.set({ second: sec }));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"timepicker\">\r\n      <HourPicker is24Format selected={props.selectedHour} setHour={setHour} />:\r\n      <MinutesPicker\r\n        increment={1}\r\n        selected={props.selectedMinute}\r\n        setMinute={setMinute}\r\n      />\r\n      :\r\n      <SecondsPicker selected={props.selectedSecond} setSecond={setSecond} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimePicker;\r\n","import React from \"react\";\r\n\r\ntype HourPickerProps = {\r\n  is24Format: boolean;\r\n  selected: number;\r\n  setHour: (hour: number) => any;\r\n};\r\n\r\nfunction HourPicker(props: HourPickerProps) {\r\n  var start = props.is24Format ? 0 : 1;\r\n  var end = props.is24Format ? 23 : 12;\r\n\r\n  let options = [];\r\n  for (var i = start; i <= end; i++) {\r\n    options.push(\r\n      <option key={i} value={i}>\r\n        {i}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"hour-picker-container\">\r\n      <select\r\n        className=\"hour-picker\"\r\n        defaultValue={props.selected}\r\n        onChange={(e) => props.setHour(+e.target.value)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HourPicker;\r\n","import * as React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\ntype MinutesPickerProps = {\r\n  increment: number;\r\n  selected: number;\r\n  setMinute: (min: number) => any;\r\n};\r\n\r\nfunction MinutesPicker(props: MinutesPickerProps) {\r\n  let options = [];\r\n  for (var i = 0; i < 60; i += props.increment) {\r\n    options.push(\r\n      <option key={i} value={i}>\r\n        {i}\r\n      </option>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"minutes-picker-container\">\r\n      <select\r\n        defaultValue={props.selected}\r\n        onChange={(e) => props.setMinute(+e.target.value)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MinutesPicker;\r\n","import React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\ntype SecondsPickerProps = {\r\n  selected: number;\r\n  setSecond: (sec: number) => any;\r\n};\r\n\r\nfunction SecondsPicker(props: SecondsPickerProps) {\r\n  let options = [];\r\n  for (var i = 0; i < 60; i++) {\r\n    options.push(\r\n      <option key={i} value={i}>\r\n        {i}\r\n      </option>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"seconds-picker-container\">\r\n      <select\r\n        defaultValue={props.selected}\r\n        onChange={(e) => props.setSecond(+e.target.value)}\r\n      >\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SecondsPicker;\r\n","import React from \"react\";\r\nimport { CalendarControlProps } from \"../../../types/CalendarControlProps\";\r\nimport \"./CalendarControlLeft.css\";\r\n\r\nfunction CalendarControlLeft(props: CalendarControlProps) {\r\n  return (\r\n    <div className=\"left-control-container\">\r\n      <div className=\"left\" onClick={() => props.decreaseMonth!()}></div>\r\n      <div className=\"centre\">\r\n        <span className=\"month-name\">{props.monthName}</span>\r\n        <span className=\"year-name\">{props.year}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarControlLeft;\r\n","import React from \"react\";\r\nimport { CalendarControlProps } from \"../../../types/CalendarControlProps\";\r\nimport \"./CalendarControlRight.css\";\r\n\r\nfunction CalendarControlRight(props: CalendarControlProps) {\r\n  return (\r\n    <div className=\"right-control-container\">\r\n      <div className=\"centre\">\r\n        <span className=\"month-name\">{props.monthName}</span>\r\n        <span className=\"year-name\">{props.year}</span>\r\n      </div>\r\n      <div className=\"right\" onClick={() => props.increaseMonth!()}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarControlRight;\r\n","import React from \"react\";\r\n\r\nimport { DateTime } from \"luxon\";\r\n\r\nimport \"./SelectionPanel.css\";\r\n\r\ntype SelectionPanelProps = {\r\n  startDate: DateTime;\r\n  endDate?: DateTime;\r\n  format: string;\r\n  applyDateRange: (startDate: DateTime, endDate: DateTime) => any;\r\n  closeFn: (show: boolean) => any;\r\n};\r\n\r\nfunction SelectionPanel(props: SelectionPanelProps) {\r\n  return (\r\n    <div className=\"selection-panel\">\r\n      <div className=\"display-section\">\r\n        <span className=\"start-date-label\">\r\n          {props.startDate.toFormat(props.format)}\r\n        </span>\r\n        <span className=\"start-date-label\">\r\n          {props.endDate ? props.endDate.toFormat(props.format) : \"\"}\r\n        </span>\r\n      </div>\r\n      <div className=\"control-section\">\r\n        <input\r\n          type=\"button\"\r\n          className=\"cancel-button\"\r\n          value=\"Cancel\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            props.closeFn(false);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"button\"\r\n          className=\"range-selection-button\"\r\n          value=\"Apply\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            props.applyDateRange(props.startDate, props.endDate!);\r\n            props.closeFn(false);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectionPanel;\r\n","import { DateTime } from \"luxon\";\r\nimport React from \"react\";\r\nimport { SelectedRange } from \"../../types/SelectedRange\";\r\n\r\ntype DisplayPanelProps = {\r\n  dateFormat: string;\r\n  selectedDate: DateTime;\r\n  selectedRange?: SelectedRange;\r\n  setShowPopup: (show: boolean) => any;\r\n};\r\n\r\nfunction DisplayPanel(props: DisplayPanelProps) {\r\n  function setInputValue() {\r\n    return props.selectedRange\r\n      ? `${props.selectedRange?.startDate.toFormat(\r\n          props.dateFormat\r\n        )}-${props.selectedRange?.endDate?.toFormat(props.dateFormat)}`\r\n      : `${props.selectedDate\r\n          .minus({ day: 1 })\r\n          .toFormat(props.dateFormat)}-${props.selectedDate\r\n          .plus({ day: 1 })\r\n          .toFormat(props.dateFormat)}`;\r\n  }\r\n  return (\r\n    <div className=\"display-panel\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"dates\"\r\n        className=\"selection-display\"\r\n        placeholder=\"selected date...\"\r\n        value={setInputValue()}\r\n        readOnly\r\n        onFocus={(e) => props.setShowPopup(true)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayPanel;\r\n"]}